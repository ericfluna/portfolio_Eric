---
// src/pages/projects/[project].astro
import Layout from "@/layouts/Layout.astro";
import { projects } from "@/data/projects";
import "@/styles/global.css";
const Back = "/assets/icons/back.svg";

export function getStaticPaths() {
  return projects.map((project) => ({
    params: { project: project.slug },
    props: { project }, // Pasamos todo el objeto proyecto como prop
  }));
}

const { project } = Astro.props; // Ahora tenemos acceso a todos los datos
---

<Layout>
  <div>
    <div
      class="px-4 sm:px-6 lg:px-8 relative max-w-3xl mx-auto pt-62 pb-18 flex flex-col justify-center items-center"
    >
      <a href="/" class="flex text-2xl gap-4 place-self-start items-center">
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="48"
          height="23"
          viewBox="0 0 48 23"
          fill="none"
          class="fill-[#2f3033] dark:fill-[#FEFEFE]"
        >
          <path
            d="M0.93934 10.4393C0.353553 11.0251 0.353553 11.9749 0.93934 12.5607L10.4853 22.1066C11.0711 22.6924 12.0208 22.6924 12.6066 22.1066C13.1924 21.5208 13.1924 20.5711 12.6066 19.9853L4.12132 11.5L12.6066 3.01472C13.1924 2.42894 13.1924 1.47919 12.6066 0.893401C12.0208 0.307615 11.0711 0.307615 10.4853 0.893402L0.93934 10.4393ZM48 11.5L48 10L2 10L2 11.5L2 13L48 13L48 11.5Z"
          ></path>
        </svg><p class="text-2xl font-bold">Back</p></a
      >

      <!--
    fdfdsfs
     -->
      <div class="gap-7 flex flex-col mt-10">
        <div class="w-full flex justify-between items-end">
          <h1 class="text-3xl font-bold">
            {project.title}
          </h1>

          <div>
            {
              project.isDone ? (
                <div class="rounded-full bg-green-100 dark:bg-green-100 text-green-700 flex items-center gap-2 px-4 py-1.5 text-xs font-medium">
                  <div class="relative flex items-center justify-center">
                    <div class="rounded-full bg-green-600 h-2 w-2 animate-pulse" />
                    <div class="absolute animate-ping rounded-full bg-green-600 h-2 w-2 opacity-75" />
                  </div>
                  <span>Completed </span>
                </div>
              ) : (
                <div class="rounded-full bg-yellow-100 dark:bg-yellow-100 text-yellow-700 flex items-center gap-2 px-4 py-1.5 text-xs font-medium">
                  <div class="relative flex items-center justify-center">
                    <div class="rounded-full bg-yellow-600 h-2 w-2 animate-pulse" />
                    <div class="absolute animate-ping rounded-full bg-yellow-600 h-2 w-2 opacity-75" />
                  </div>
                  <span>Coming Soon </span>
                </div>
              )
            }
          </div>
        </div>

        <p class="text-lg place-self-start">{project.description}</p>
        <div class="flex flex-wrap gap-2 pt-1 content-end items-center">
          <p>Stack:</p>{
            project.stack.map((tech) => (
              <span class="px-2.5 py-2 bg-zinc-100 dark:bg-zinc-700 border border-zinc-200/30 text- text-xs rounded-md font-medium h-fit transition-all duration-300 ease-in-out hover:scale-105">
                {tech}
              </span>
            ))
          }
        </div>
        <div class="relative overflow-hidden rounded-xl shadow-lg">
          {/* Contenedor del carrusel */}
          <div
            class="flex snap-x snap-mandatory overflow-x-auto scroll-smooth hide-scrollbar"
          >
            {/* Misma imagen repetida 4 veces (como en tu ejemplo) */}
            {
              [1, 2, 3, 4].map((_, index) => (
                <div class="w-full flex-shrink-0 snap-center">
                  <img
                    src={project.images[0]}
                    alt={`${project.title} - Vista ${index + 1}`}
                    class="w-full h-auto max-h-96 object-cover"
                    loading={index === 0 ? "eager" : "lazy"}
                  />
                </div>
              ))
            }
          </div>

          {/* Indicadores de posici√≥n (puntos) */}
          <div
            class="absolute bottom-4 left-0 right-0 flex justify-center gap-2"
          >
            {
              [1, 2, 3, 4].map((_, index) => (
                <div class="h-2 w-2 rounded-full bg-white/80 hover:bg-white transition-all" />
              ))
            }
          </div>
        </div>

        <style>
          .hide-scrollbar::-webkit-scrollbar {
            display: none;
          }
          .hide-scrollbar {
            -ms-overflow-style: none;
            scrollbar-width: none;
          }
        </style>
      </div>
    </div>
  </div></Layout
>
